# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

type Mutation {
  create_categories_item(data: create_categories_input!): categories
  create_categories_items(data: [create_categories_input!], filter: categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [categories]
  create_languages_item(data: create_languages_input!): languages
  create_languages_items(data: [create_languages_input!], filter: languages_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [languages]
  create_posts_categories_item(data: create_posts_categories_input!): posts_categories
  create_posts_categories_items(data: [create_posts_categories_input!], filter: posts_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts_categories]
  create_posts_item(data: create_posts_input!): posts
  create_posts_items(data: [create_posts_input!], filter: posts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts]
  create_posts_translations_item(data: create_posts_translations_input!): posts_translations
  create_posts_translations_items(data: [create_posts_translations_input!], filter: posts_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts_translations]
  delete_categories_item(id: ID!): delete_one
  delete_categories_items(ids: [ID]!): delete_many
  delete_languages_item(id: ID!): delete_one
  delete_languages_items(ids: [ID]!): delete_many
  delete_posts_categories_item(id: ID!): delete_one
  delete_posts_categories_items(ids: [ID]!): delete_many
  delete_posts_item(id: ID!): delete_one
  delete_posts_items(ids: [ID]!): delete_many
  delete_posts_translations_item(id: ID!): delete_one
  delete_posts_translations_items(ids: [ID]!): delete_many
  update_categories_item(data: update_categories_input!, id: ID!): categories
  update_categories_items(data: update_categories_input!, filter: categories_filter, ids: [ID]!, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [categories]
  update_languages_item(data: update_languages_input!, id: ID!): languages
  update_languages_items(data: update_languages_input!, filter: languages_filter, ids: [ID]!, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [languages]
  update_posts_categories_item(data: update_posts_categories_input!, id: ID!): posts_categories
  update_posts_categories_items(data: update_posts_categories_input!, filter: posts_categories_filter, ids: [ID]!, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts_categories]
  update_posts_item(data: update_posts_input!, id: ID!): posts
  update_posts_items(data: update_posts_input!, filter: posts_filter, ids: [ID]!, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts]
  update_posts_translations_item(data: update_posts_translations_input!, id: ID!): posts_translations
  update_posts_translations_items(data: update_posts_translations_input!, filter: posts_translations_filter, ids: [ID]!, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts_translations]
}

type Query {
  categories(filter: categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [categories]
  categories_aggregated(filter: categories_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [categories_aggregated]
  categories_by_id(id: ID!): categories
  languages(filter: languages_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [languages]
  languages_by_id(id: ID!): languages
  posts(filter: posts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts]
  posts_aggregated(filter: posts_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [posts_aggregated]
  posts_by_id(id: ID!): posts
  posts_categories(filter: posts_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts_categories]
  posts_categories_aggregated(filter: posts_categories_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [posts_categories_aggregated]
  posts_categories_by_id(id: ID!): posts_categories
  posts_translations(filter: posts_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts_translations]
  posts_translations_aggregated(filter: posts_translations_filter, groupBy: [String], limit: Int, search: String, sort: [String]): [posts_translations_aggregated]
  posts_translations_by_id(id: ID!): posts_translations
}

type categories {
  id: ID
  name: String!
  parent_id(filter: categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): categories
  slug: String
  subcategories(filter: categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [categories]
}

type categories_aggregated {
  avg: categories_aggregated_fields
  avgDistinct: categories_aggregated_fields
  count: categories_aggregated_fields
  countDistinct: categories_aggregated_fields
  group: JSON
  max: categories_aggregated_fields
  min: categories_aggregated_fields
  sum: categories_aggregated_fields
  sumDistinct: categories_aggregated_fields
}

type categories_aggregated_fields {
  id: Float
  parent_id: Float
}

type datetime_functions {
  day: Int
  hour: Int
  minute: Int
  month: Int
  second: Int
  week: Int
  weekday: Int
  year: Int
}

type delete_many {
  ids: [ID]!
}

type delete_one {
  id: ID!
}

type directus_files {
  charset: String
  description: String
  duration: Int
  embed: String
  filename_disk: String
  filename_download: String!
  filesize: Int
  folder(filter: directus_folders_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_folders
  height: Int
  id: ID
  location: String
  metadata: JSON
  modified_by(filter: directus_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_users
  modified_on: Date!
  modified_on_func: datetime_functions
  storage: String!
  tags: JSON
  title: String
  type: String
  uploaded_by(filter: directus_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_users
  uploaded_on: Date!
  uploaded_on_func: datetime_functions
  width: Int
}

type directus_folders {
  id: ID
  name: String!
  parent(filter: directus_folders_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_folders
}

type directus_roles {
  admin_access: Boolean!
  app_access: Boolean!
  description: String
  enforce_tfa: Boolean!
  icon: String!
  id: ID
  ip_access: [String]
  name: String!
  users(filter: directus_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_users]
}

type directus_users {
  auth_data: JSON
  avatar(filter: directus_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_files
  description: String
  email: String
  email_notifications: Boolean
  external_identifier: String
  first_name: String
  id: ID
  language: String
  last_access: Date
  last_access_func: datetime_functions
  last_name: String
  last_page: String
  location: String
  password: String
  provider: String!
  role(filter: directus_roles_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_roles
  status: String!
  tags: JSON
  tfa_secret: String
  theme: String
  title: String
  token: String
}

type languages {
  code: ID
  name: String
}

type posts {
  categories(filter: posts_categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts_categories]
  id: ID
  name: String
  status: String!
  thumbnail(filter: directus_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_files
  translations(filter: posts_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [posts_translations]
}

type posts_aggregated {
  avg: posts_aggregated_fields
  avgDistinct: posts_aggregated_fields
  count: posts_aggregated_fields
  countDistinct: posts_aggregated_fields
  group: JSON
  max: posts_aggregated_fields
  min: posts_aggregated_fields
  sum: posts_aggregated_fields
  sumDistinct: posts_aggregated_fields
}

type posts_aggregated_fields {
  id: Float
}

type posts_categories {
  categories_id(filter: categories_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): categories
  id: ID
  posts_id(filter: posts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): posts
}

type posts_categories_aggregated {
  avg: posts_categories_aggregated_fields
  avgDistinct: posts_categories_aggregated_fields
  count: posts_categories_aggregated_fields
  countDistinct: posts_categories_aggregated_fields
  group: JSON
  max: posts_categories_aggregated_fields
  min: posts_categories_aggregated_fields
  sum: posts_categories_aggregated_fields
  sumDistinct: posts_categories_aggregated_fields
}

type posts_categories_aggregated_fields {
  categories_id: Float
  id: Float
  posts_id: Float
}

type posts_translations {
  author(filter: directus_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): directus_users
  content: String
  id: ID
  languages_code(filter: languages_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): languages
  posts_id(filter: posts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): posts
  slug: String
  title: String
}

type posts_translations_aggregated {
  avg: posts_translations_aggregated_fields
  avgDistinct: posts_translations_aggregated_fields
  count: posts_translations_aggregated_fields
  countDistinct: posts_translations_aggregated_fields
  group: JSON
  max: posts_translations_aggregated_fields
  min: posts_translations_aggregated_fields
  sum: posts_translations_aggregated_fields
  sumDistinct: posts_translations_aggregated_fields
}

type posts_translations_aggregated_fields {
  id: Float
  posts_id: Float
}

"ISO8601 Date values"
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _nnull: Boolean
  _null: Boolean
}

input categories_filter {
  _and: [categories_filter]
  _or: [categories_filter]
  id: number_filter_operators
  name: string_filter_operators
  parent_id: categories_filter
  slug: string_filter_operators
  subcategories: categories_filter
}

input create_categories_input {
  id: ID
  name: String!
  parent_id: create_categories_input
  slug: String
  subcategories: [create_categories_input]
}

input create_directus_files_input {
  charset: String
  description: String
  duration: Int
  embed: String
  filename_disk: String
  filename_download: String!
  filesize: Int
  folder: create_directus_folders_input
  height: Int
  id: ID
  location: String
  metadata: JSON
  modified_by: create_directus_users_input
  modified_on: Date!
  modified_on_func: datetime_functionsInput
  storage: String!
  tags: JSON
  title: String
  type: String
  uploaded_by: create_directus_users_input
  uploaded_on: Date!
  uploaded_on_func: datetime_functionsInput
  width: Int
}

input create_directus_folders_input {
  id: ID
  name: String!
  parent: create_directus_folders_input
}

input create_directus_roles_input {
  admin_access: Boolean!
  app_access: Boolean!
  description: String
  enforce_tfa: Boolean!
  icon: String!
  id: ID
  ip_access: [String]
  name: String!
  users: [create_directus_users_input]
}

input create_directus_users_input {
  auth_data: JSON
  avatar: create_directus_files_input
  description: String
  email: String
  email_notifications: Boolean
  external_identifier: String
  first_name: String
  id: ID
  language: String
  last_access: Date
  last_access_func: datetime_functionsInput
  last_name: String
  last_page: String
  location: String
  password: String
  provider: String!
  role: create_directus_roles_input
  status: String!
  tags: JSON
  tfa_secret: String
  theme: String
  title: String
  token: String
}

input create_languages_input {
  code: ID
  name: String
}

input create_posts_categories_input {
  categories_id: create_categories_input
  id: ID
  posts_id: create_posts_input
}

input create_posts_input {
  categories: [create_posts_categories_input]
  id: ID
  name: String
  status: String!
  thumbnail: create_directus_files_input
  translations: [create_posts_translations_input]
}

input create_posts_translations_input {
  author: create_directus_users_input
  content: String
  id: ID
  languages_code: create_languages_input
  posts_id: create_posts_input
  slug: String
  title: String
}

input date_filter_operators {
  _eq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _neq: String
  _nnull: Boolean
  _null: Boolean
}

input datetime_function_filter_operators {
  day: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  month: number_filter_operators
  second: number_filter_operators
  week: number_filter_operators
  weekday: number_filter_operators
  year: number_filter_operators
}

input datetime_functionsInput {
  day: Int
  hour: Int
  minute: Int
  month: Int
  second: Int
  week: Int
  weekday: Int
  year: Int
}

input directus_files_filter {
  _and: [directus_files_filter]
  _or: [directus_files_filter]
  charset: string_filter_operators
  description: string_filter_operators
  duration: number_filter_operators
  embed: string_filter_operators
  filename_disk: string_filter_operators
  filename_download: string_filter_operators
  filesize: number_filter_operators
  folder: directus_folders_filter
  height: number_filter_operators
  id: string_filter_operators
  location: string_filter_operators
  metadata: string_filter_operators
  modified_by: directus_users_filter
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  storage: string_filter_operators
  tags: string_filter_operators
  title: string_filter_operators
  type: string_filter_operators
  uploaded_by: directus_users_filter
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  width: number_filter_operators
}

input directus_folders_filter {
  _and: [directus_folders_filter]
  _or: [directus_folders_filter]
  id: string_filter_operators
  name: string_filter_operators
  parent: directus_folders_filter
}

input directus_roles_filter {
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
  admin_access: boolean_filter_operators
  app_access: boolean_filter_operators
  description: string_filter_operators
  enforce_tfa: boolean_filter_operators
  icon: string_filter_operators
  id: string_filter_operators
  ip_access: string_filter_operators
  name: string_filter_operators
  users: directus_users_filter
}

input directus_users_filter {
  _and: [directus_users_filter]
  _or: [directus_users_filter]
  auth_data: string_filter_operators
  avatar: directus_files_filter
  description: string_filter_operators
  email: string_filter_operators
  email_notifications: boolean_filter_operators
  external_identifier: string_filter_operators
  first_name: string_filter_operators
  id: string_filter_operators
  language: string_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_name: string_filter_operators
  last_page: string_filter_operators
  location: string_filter_operators
  password: string_filter_operators
  provider: string_filter_operators
  role: directus_roles_filter
  status: string_filter_operators
  tags: string_filter_operators
  tfa_secret: string_filter_operators
  theme: string_filter_operators
  title: string_filter_operators
  token: string_filter_operators
}

input languages_filter {
  _and: [languages_filter]
  _or: [languages_filter]
  code: string_filter_operators
  name: string_filter_operators
}

input number_filter_operators {
  _eq: Float
  _gt: Float
  _gte: Float
  _in: [Float]
  _lt: Float
  _lte: Float
  _neq: Float
  _nin: [Float]
  _nnull: Boolean
  _null: Boolean
}

input posts_categories_filter {
  _and: [posts_categories_filter]
  _or: [posts_categories_filter]
  categories_id: categories_filter
  id: number_filter_operators
  posts_id: posts_filter
}

input posts_filter {
  _and: [posts_filter]
  _or: [posts_filter]
  categories: posts_categories_filter
  id: number_filter_operators
  name: string_filter_operators
  status: string_filter_operators
  thumbnail: directus_files_filter
  translations: posts_translations_filter
}

input posts_translations_filter {
  _and: [posts_translations_filter]
  _or: [posts_translations_filter]
  author: directus_users_filter
  content: string_filter_operators
  id: number_filter_operators
  languages_code: languages_filter
  posts_id: posts_filter
  slug: string_filter_operators
  title: string_filter_operators
}

input string_filter_operators {
  _contains: String
  _empty: Boolean
  _ends_with: String
  _eq: String
  _in: [String]
  _ncontains: String
  _nempty: Boolean
  _nends_with: String
  _neq: String
  _nin: [String]
  _nnull: Boolean
  _nstarts_with: String
  _null: Boolean
  _starts_with: String
}

input update_categories_input {
  id: ID
  name: String
  parent_id: update_categories_input
  slug: String
  subcategories: [update_categories_input]
}

input update_directus_files_input {
  charset: String
  description: String
  duration: Int
  embed: String
  filename_disk: String
  filename_download: String
  filesize: Int
  folder: update_directus_folders_input
  height: Int
  id: ID
  location: String
  metadata: JSON
  modified_by: update_directus_users_input
  modified_on: Date
  modified_on_func: datetime_functionsInput
  storage: String
  tags: JSON
  title: String
  type: String
  uploaded_by: update_directus_users_input
  uploaded_on: Date
  uploaded_on_func: datetime_functionsInput
  width: Int
}

input update_directus_folders_input {
  id: ID
  name: String
  parent: update_directus_folders_input
}

input update_directus_roles_input {
  admin_access: Boolean
  app_access: Boolean
  description: String
  enforce_tfa: Boolean
  icon: String
  id: ID
  ip_access: [String]
  name: String
  users: [update_directus_users_input]
}

input update_directus_users_input {
  auth_data: JSON
  avatar: update_directus_files_input
  description: String
  email: String
  email_notifications: Boolean
  external_identifier: String
  first_name: String
  id: ID
  language: String
  last_access: Date
  last_access_func: datetime_functionsInput
  last_name: String
  last_page: String
  location: String
  password: String
  provider: String
  role: update_directus_roles_input
  status: String
  tags: JSON
  tfa_secret: String
  theme: String
  title: String
  token: String
}

input update_languages_input {
  code: ID
  name: String
}

input update_posts_categories_input {
  categories_id: update_categories_input
  id: ID
  posts_id: update_posts_input
}

input update_posts_input {
  categories: [update_posts_categories_input]
  id: ID
  name: String
  status: String
  thumbnail: update_directus_files_input
  translations: [update_posts_translations_input]
}

input update_posts_translations_input {
  author: update_directus_users_input
  content: String
  id: ID
  languages_code: update_languages_input
  posts_id: update_posts_input
  slug: String
  title: String
}
